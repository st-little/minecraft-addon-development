version: "3"

services:
  dev:
    # build:
    #   context: .
    #   dockerfile: Dockerfile.dev
    image: mcr.microsoft.com/devcontainers/base:bullseye
    container_name: dev
    volumes:
      # Forwards the local Docker socket to the container.
      - /var/run/docker.sock:/var/run/docker-host.sock
      # Update this to wherever you want VS Code to mount the folder of your project
      - ../..:/workspaces:cached

    # Overrides default command so things don't shut down after the process ends.
    entrypoint: /usr/local/share/docker-init.sh
    command: sleep infinity

    # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
    # cap_add:
    #  - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  # https://github.com/itzg/docker-minecraft-bedrock-server
  mc:
    image: itzg/minecraft-bedrock-server
    container_name: mc
    ports:
      - ${MC_PORT}:${MC_PORT}/udp
      - ${MC_DEBUG_PORT}:${MC_DEBUG_PORT}
    environment:
      EULA: "TRUE"
      VERSION: LATEST
      SERVER_NAME: "${MC_SERVER_NAME}"
      GAMEMODE: "${MC_GAMEMODE}"
      DIFFICULTY: "${MC_DIFFICULTY}"
      ALLOW_CHEATS: "${MC_ALLOW_CHEATS}"
      MAX_PLAYERS: ${MC_MAX_PLAYERS}
      DEFAULT_PLAYER_PERMISSION_LEVEL: ${MC_DEFAULT_PLAYER_PERMISSION_LEVEL}
      ALLOW_OUTBOUND_SCRIPT_DEBUGGING: ${MC_ALLOW_OUTBOUND_SCRIPT_DEBUGGING}
      ALLOW_INBOUND_SCRIPT_DEBUGGING: ${MC_ALLOW_INBOUND_SCRIPT_DEBUGGING}
      FORCE_INBOUND_DEBUG_PORT: ${MC_DEBUG_PORT}
    stdin_open: true
    tty: true
    volumes:
      - ${MC_BEDROCK_DEDICATED_SERVER}:/data
